name: Deploy Nestia SDK

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/sdk-deploy.yml'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build SDK
        run: pnpm build:sdk

      - name: Update SDK package.json
        run: |
          cd dist/sdk
          npm pkg set name="@ean-studio/backend-template-sdk"
          npm pkg set repository.type="git"
          npm pkg set repository.url="https://github.com/ean-studio/nestjs-enterprise-template"
          npm pkg set author="Ean Studio"
          npm pkg set license="ISC"
          npm pkg set bugs.url="https://github.com/ean-studio/nestjs-enterprise-template/issues"
          npm pkg set homepage="https://github.com/ean-studio/nestjs-enterprise-template"

      - name: Get latest version from GitHub Package Registry
        id: get-version
        run: |
          LATEST_VERSION=$(npm view @ean-studio/backend-template-sdk version 2>/dev/null || echo "0.0.0")
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update SDK version
        run: |
          cd dist/sdk
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          CURRENT_VERSION=${{ steps.get-version.outputs.latest_version }}
          npm version $CURRENT_VERSION --no-git-tag-version
          if [ "$CURRENT_VERSION" = "0.0.0" ]; then
            npm version 1.0.0 --no-git-tag-version
          else
            case $BRANCH_NAME in
              "main")
                npm version major --no-git-tag-version
                ;;
              "develop")
                npm version minor --no-git-tag-version
                ;;
              *)
                npm version patch --no-git-tag-version
                ;;
            esac
          fi

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Publish to GitHub Package Registry
        run: |
          cd dist/sdk
          pnpm run deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
